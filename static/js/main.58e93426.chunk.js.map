{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","forgotPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useNavigate","e","a","preventDefault","current","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","onClick","Login","ForgotPassword","message","setMessage","UpdateProfile","promises","push","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58e93426.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nexport const auth = app.auth();\nexport default app;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function forgotPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    forgotPassword,\n    updateEmail,\n    updatePassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Alert } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst Signup = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { signup } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useNavigate()\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value)\n      return setError(\"Passwords do not match\");\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      history(\"/\");\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account? <Link to=\"/login\">Log In</Link>\n      </div>\n    </>\n  );\n};\n\nexport default Signup;\n","import React, { useContext, useState } from \"react\";\nimport { Card, Button, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst Dashboard = () => {\n  const [error, setError] = useState(\"\");\n  const { currentUser, logout } = useAuth();\n  const history = useNavigate();\n\n  async function handleLogout() {\n    setError(\"\");\n\n    try {\n      await logout();\n      history(\"/login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <strong>Email: </strong>\n          {currentUser.email}\n          <Link to=\"update-profile\" className=\"btn btn-primary w-100 mt-3\">\n            Update Profile\n          </Link>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Button variant=\"link\" onClick={handleLogout}>\n          Log Out\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Alert } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst Login = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const { login } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useNavigate();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      setLoading(false);\n      history(\"/\");\n    } catch {\n      setError(\"Failed to sign in\");\n      setLoading(false);\n    }\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Log In</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">\n              Log In\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/forgot-password\">Forgot password?</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useRef, useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport { Alert, Button, Card, Form } from \"react-bootstrap\";\n\nconst ForgotPassword = () => {\n  const emailRef = useRef();\n  const { forgotPassword } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setMessage(\"\");\n      setError(\"\");\n      setLoading(true);\n      await forgotPassword(emailRef.current.value);\n      setMessage(\"Check your inbox for further instructions\");\n      setLoading(false);\n    } catch {\n      setError(\"Failed to reset password\");\n      setLoading(false);\n    }\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {message && <Alert variant=\"success\">{message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n\n            <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">\n              Reset Password\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/login\">Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  );\n};\n\nexport default ForgotPassword;\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Alert } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst UpdateProfile = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { currentUser, updateEmail, updatePassword } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value)\n      return setError(\"Passwords do not match\");\n\n    const promises = [];\n    setError(\"\");\n    setLoading(true);\n    if (emailRef.current.value !== currentUser.email)\n      promises.push(updateEmail(emailRef.current.value));\n    if (passwordRef.current.value)\n      promises.push(updatePassword(passwordRef.current.value));\n\n    Promise.all(promises)\n      .then(() => history(\"/\"))\n      .catch(() => setError(\"Failed to update account\"))\n      .finally(() => setLoading(false));\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                placeholder=\"Leave blank to keep the same\"\n                type=\"password\"\n                ref={passwordRef}\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                placeholder=\"Leave blank to keep the same\"\n                type=\"password\"\n                ref={passwordConfirmRef}\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/\">Cancel</Link>\n      </div>\n    </>\n  );\n};\n\nexport default UpdateProfile;\n","import React from \"react\";\nimport Signup from \"./Signup\";\nimport { Container } from \"react-bootstrap\";\nimport { AuthProvider, useAuth } from \"../contexts/AuthContext\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport Login from \"./Login\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport UpdateProfile from \"./UpdateProfile\";\n\nfunction App() {\n  const { currentUser } = useAuth();\n\n  return (\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n        <Router>\n          <Routes>\n            <Route\n              path=\"/\"\n              element={currentUser ? <Dashboard /> : <Navigate to=\"/login\" />}\n            />\n            <Route\n              path=\"/update-profile\"\n              element={\n                currentUser ? <UpdateProfile /> : <Navigate to=\"/login\" />\n              }\n            />\n            <Route path=\"/signup\" element={<Signup />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n          </Routes>\n        </Router>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}